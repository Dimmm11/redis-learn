services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8087:8087"
      - "5005:5005"
    depends_on:
      - redis
      - postgres-db
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
    networks:
      - dimmm-net
    volumes:
      - /home/ec2-user/.m2:/root/.m2
    restart: unless-stopped

  kafka:
    image: apache/kafka:latest
    container_name: kafka-broker
    ports:
      - "9092:9092"
    networks:
      - dimmm-net
    environment:
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_NODE_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-broker:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka-broker:9093
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=false
    volumes:
      - kafka-data:/var/lib/kafka/data

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - dimmm-net
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    restart: unless-stopped

  postgres-db:
    image: postgres:16-alpine
    container_name: postgres-db
    ports:
      - "5434:5432"
    restart: always
    environment:
      - POSTGRES_DB=users-events
      - POSTGRES_USER=dimmm
      - POSTGRES_PASSWORD=12345
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - dimmm-net

volumes:
  postgres-data:
  kafka-data:

networks:
  dimmm-net:
    driver: bridge